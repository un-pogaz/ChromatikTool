//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chromatik {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Chromatik.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;!--
        ///    This HTML DTD is based on loose.dtd from the W3C, but it is even looser
        ///    so as to allow for the types of real world messy HTML you find out on the
        ///    web.  For example, allowing all kinds of content like &lt;script&gt; inside a &lt;TD&gt;
        ///    and so forth.
        ///--&gt;
        ///&lt;!ENTITY % HTML.Version &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;
        ///  -- Typical usage:
        ///
        ///    &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;
        ///            &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;
        ///    &lt;html&gt;
        ///    &lt;head&gt;
        ///    ...
        ///  [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string Html_dtd {
            get {
                return ResourceManager.GetString("Html_dtd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à static public string Pattern { get { return _regex.ToString(); } }
        ///static public RegexOptions Options { get { return _regex.Options; } }
        ///static public TimeSpan MatchTimeout { get { return _regex.MatchTimeout; } }
        ///static public bool RightToLeft { get { return _regex.RightToLeft; } }
        ///static public string[] GetGroupNames() { return _regex.GetGroupNames(); }
        ///static public int[] GetGroupNumbers() { return _regex.GetGroupNumbers(); }
        ///static public string GroupNameFromNumber(int i) { return _regex.GroupNameFr [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string RegexStatic {
            get {
                return ResourceManager.GetString("RegexStatic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;XML&gt;
        ///  &lt;Charsets&gt;
        ///    
        ///    &lt;Charset nameID=&quot;ASCII&quot;&gt;
        ///      &lt;Name lang=&quot;en&quot;&gt;ASCII&lt;/Name&gt;
        ///      &lt;Description lang=&quot;en&quot;&gt;&lt;/Description&gt;
        ///      &lt;Localisable&gt;
        ///        &lt;Languages lang=&quot;en&quot;&gt;&lt;/Languages&gt;
        ///        &lt;Countries lang=&quot;en&quot;&gt;&lt;/Countries&gt;
        ///      &lt;/Localisable&gt;
        ///      &lt;CodeRange&gt;
        ///        &lt;Range&gt;0000-007F&lt;/Range&gt;
        ///      &lt;/CodeRange&gt;
        ///    &lt;/Charset&gt;
        ///    &lt;Charset nameID=&quot;Latin-1&quot;&gt;
        ///      &lt;Name lang=&quot;en&quot;&gt;Latin-1&lt;/Name&gt;
        ///      &lt;Description lang=&quot;en&quot;&gt;Latin-1 Western E [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string unicode_charsets {
            get {
                return ResourceManager.GetString("unicode_charsets", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;XML&gt;
        ///  &lt;ConScript&gt;
        ///    &lt;Plane nameID=&quot;ConScript Unicode Registry&quot;&gt;
        ///      &lt;Name lang=&quot;en&quot;&gt;ConScript Unicode Registry&lt;/Name&gt;
        ///      &lt;Description lang=&quot;en&quot;&gt;&lt;/Description&gt;
        ///      
        ///      &lt;Block nameID=&quot;Tengwar&quot;&gt;
        ///        &lt;Name lang=&quot;en&quot;&gt;Tengwar&lt;/Name&gt;
        ///        &lt;Description lang=&quot;en&quot;&gt;&lt;/Description&gt;
        ///        &lt;Localisable&gt;
        ///          &lt;Languages lang=&quot;en&quot;&gt;&lt;/Languages&gt;
        ///          &lt;Countries lang=&quot;en&quot;&gt;&lt;/Countries&gt;
        ///        &lt;/Localisable&gt;
        ///        &lt;WebCharTable url=&quot;https:// [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string unicode_conscript {
            get {
                return ResourceManager.GetString("unicode_conscript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;XML&gt;
        ///  &lt;Unicode&gt;
        ///    &lt;Plane nameID=&quot;Basic Multilingual Plane&quot;&gt;
        ///      &lt;Name lang=&quot;en&quot;&gt;Basic Multilingual Plane&lt;/Name&gt;
        ///      &lt;Name lang=&quot;fr&quot;&gt;Plan multilingue de base&lt;/Name&gt;
        ///      &lt;Description lang=&quot;en&quot;&gt;&lt;/Description&gt;
        ///      &lt;Block nameID=&quot;C0 Controls&quot;&gt;
        ///        &lt;Name lang=&quot;en&quot;&gt;C0 Controls&lt;/Name&gt;
        ///        &lt;Name lang=&quot;fr&quot;&gt;Controle C0&lt;/Name&gt;
        ///        &lt;Description lang=&quot;en&quot;&gt;&lt;/Description&gt;
        ///        &lt;Localisable&gt;
        ///          &lt;Languages&gt;&lt;/Languages&gt;
        ///          &lt;Countries&gt; [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        internal static string unicode_unicode {
            get {
                return ResourceManager.GetString("unicode_unicode", resourceCulture);
            }
        }
    }
}
